buildscript {
  ext {
    kafkaConnectApiVersion = "2.1.1"
  }
}


plugins {
    id 'idea'
    id 'com.palantir.git-version' version '0.5.2'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'java'
    id "com.github.spotbugs" version "2.0.0" apply false
    id "net.rdrei.android.buildtimetracker" version "0.11.0"
}

task userWrapper(type: Wrapper) {
    gradleVersion = '5.3.1'
}

description = "kafka-connect-dynamodb"

allprojects {
    group "com.trustpilot.kafka.connect.dynamodb"
    version = versionDetails().lastTag.replaceAll(/^v/,'')

    repositories {
        jcenter()
    }

    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    apply plugin: 'idea'

    apply plugin: 'com.github.spotbugs'
    tasks.withType(com.github.spotbugs.SpotBugsTask) {
        reports {
          xml.enabled = false
          html.enabled = true
        }
    }
    apply plugin: "build-time-tracker"


    dependencies {
        testImplementation('org.junit.jupiter:junit-jupiter:5.4.1')
        testCompile ("org.junit.jupiter:junit-jupiter-params:5.3.2")
        testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.26.0'
        compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.2'
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
        compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.2'
    }

    test {
	    useJUnitPlatform()
	    testLogging {
            outputs.upToDateWhen {false}
            events = ["passed", "failed", "skipped"]
            showStandardStreams = true
            afterSuite { desc, result ->
                if (!desc.parent) { // will match the outermost suite
                    println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                }
            }
	    }
    }
}

dependencies {
    compile project(':source')
}

shadowJar {
	dependencies {
		// provided in the connect classpath
		exclude(dependency("org.apache.kafka:connect-api:${rootProject.ext.kafkaConnectApiVersion}"))
		exclude(dependency("org.apache.kafka:kafka-clients:${rootProject.ext.kafkaConnectApiVersion}"))
		exclude(dependency('net.jpountz.lz4:.*:.*'))
		exclude(dependency('org.xerial.snappy:.*:.*'))
		exclude(dependency('org.slf4j:.*:.*'))
	}
}

buildtimetracker {
  reporters {
    csv {
      output "build/times.csv"
      append true
      header false
    }

    summary {
      ordered false
      threshold 50
      barstyle "unicode"
    }

    csvSummary {
      csv "build/times.csv"
    }
  }
}

defaultTasks 'clean', 'check'